(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.3"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.3"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.3"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.3"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}class v extends _{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(v.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||t:void 0})),t&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==v.copyRedirectedCacheableResponsesPlugin&&(a===v.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(v.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}v.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},v.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class m{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new v({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"656d3ed54a0808df67452119ccc78026","url":"404.html"},{"revision":"efb41d220301be32050c7ae1a9864d72","url":"assets/css/styles.3b557968.css"},{"revision":"8a9c19ff8ff7b3e4db22ac5a654dd757","url":"assets/js/01a85c17.d0492745.js"},{"revision":"1a88ba5f82d49d26e5f681e997d976a3","url":"assets/js/131.ffbcb5aa.js"},{"revision":"678953dfe8959eef59e75d44e614f516","url":"assets/js/14eb3368.fdf4b4ef.js"},{"revision":"bf34812525eec1bfb573674bc342e316","url":"assets/js/17896441.184a0601.js"},{"revision":"f8c1a093e9ac7f411b570c7186a47a33","url":"assets/js/1be78505.f2f1dff8.js"},{"revision":"830973b12bfd43d81cb1f89808c25a27","url":"assets/js/1df93b7f.c3301293.js"},{"revision":"3692328e640b11cf1857ffef41f12129","url":"assets/js/1f391b9e.c01a4c20.js"},{"revision":"0d8a268d142046f79d72609cabc15bd6","url":"assets/js/419e7660.3f4e1eab.js"},{"revision":"870cac564121e7ac564214ef5594f5c3","url":"assets/js/433.f39351ce.js"},{"revision":"dc5cdfd237fb5a99dce04b0ee5072211","url":"assets/js/529.6bb6bd5e.js"},{"revision":"d45c57b0ec8de1b513d8534bc0fbab28","url":"assets/js/5ed6d960.2c4d0492.js"},{"revision":"d32f4cd1ae4201ff501b81fc13f4a437","url":"assets/js/6875c492.b73b49ad.js"},{"revision":"fb85e2e1e6b582a922d69792570f11d3","url":"assets/js/690.ef8e04a3.js"},{"revision":"dfe8284cc6027fffa2bae4940c54d4e1","url":"assets/js/72813f57.a5da7151.js"},{"revision":"e1bef351776a1ef219e6708c25da3295","url":"assets/js/736.a00e369e.js"},{"revision":"f7042b27232c431ef7920099a372df49","url":"assets/js/773.7f94aa13.js"},{"revision":"c8a4e32da045a16b349d6384a28a9b8d","url":"assets/js/7f88e779.4603fad2.js"},{"revision":"661526901ea83192f0b4caa175de08a7","url":"assets/js/814f3328.f84000a9.js"},{"revision":"e533d622ab5e76d20cf6304a0486952d","url":"assets/js/8d154929.c8bc3918.js"},{"revision":"d3a9096be99472c8dad1cdb241e840f5","url":"assets/js/8fa4536d.91c4fdcf.js"},{"revision":"87c4cc8a5fa430889dc78b2c7afcb7e8","url":"assets/js/935f2afb.d15a764a.js"},{"revision":"a3b2ad9e7ecdf2e547592868a56edbd9","url":"assets/js/95d26c0e.de748321.js"},{"revision":"2f25d253deea99b26f1bc5414291b4d4","url":"assets/js/99f59e63.989c9b07.js"},{"revision":"c572474a3c18caea2687d9092dab5c80","url":"assets/js/9e4087bc.e64c7fcd.js"},{"revision":"4850a561e163883c356496c6fb7cda5e","url":"assets/js/a0b0e983.c5d849c6.js"},{"revision":"8ecbbde3b3d0870eb191ec84abf4bc2b","url":"assets/js/a6aa9e1f.cf4c3ffa.js"},{"revision":"a43ade1c707b779764dace20e80b3867","url":"assets/js/a7023ddc.c9d56cb3.js"},{"revision":"79cc6dd71474139c2cbd751789a9e11c","url":"assets/js/ab4c6d72.81faccad.js"},{"revision":"bd37afee0da1f0be58833cb15f673621","url":"assets/js/ad088b09.b7e0237b.js"},{"revision":"047a147f4f52f943c4e4c73b583af51c","url":"assets/js/b2b675dd.7a37d1de.js"},{"revision":"64877ada32fed03e55d465fb3e55a73d","url":"assets/js/b2f554cd.95449ecf.js"},{"revision":"342871aebc482f38a1486af6a7f45113","url":"assets/js/b65e67f7.77afc3d8.js"},{"revision":"82d7b39b50fe5a9d0c68e5478c3a428d","url":"assets/js/c3c631e9.50397219.js"},{"revision":"6f8755ae553d5d576e27599e033b557c","url":"assets/js/c731af66.3f5aea8e.js"},{"revision":"c6d3d773f8007e1fde94d4f128fafb3e","url":"assets/js/ccc49370.d835c179.js"},{"revision":"5fd13433b4035b98e981854698a27e94","url":"assets/js/d2b3eb8d.725347d8.js"},{"revision":"a89fe917d6973cf07b4f45a7581a2b4b","url":"assets/js/d7f2f00d.a21bd2a6.js"},{"revision":"33c812c5de4368ae5d64ded7ffcb3efb","url":"assets/js/e4e1e4d1.a5b0e361.js"},{"revision":"87e03f02fb2bba360687caba80247a4b","url":"assets/js/e96ba3e9.6f88a3a2.js"},{"revision":"b0c0d73457165ad53357235b81b13eb8","url":"assets/js/e9ab7ea2.ce98d2eb.js"},{"revision":"9905e438216c6fecc23ce9b11f8a0383","url":"assets/js/f32fe326.0dd4efc2.js"},{"revision":"4f17853c255870adbb7f6eb3839b7638","url":"assets/js/main.59313aab.js"},{"revision":"d6e72a5536e645ea18f84d71f228073b","url":"assets/js/runtime~main.e4d66339.js"},{"revision":"b8a828ad4ff71bdaaf372dc19a5e4117","url":"blog.html"},{"revision":"f72511709187f2c10c1592124498db12","url":"blog/about-openai.html"},{"revision":"8eeed4cbc8d2c07aca9b7339f5e6ac52","url":"blog/archive.html"},{"revision":"e34bcac6883c588087c05545dcdf7adb","url":"blog/chatgpt-guide.html"},{"revision":"f3ea00d33c60baeaf784600535e8a920","url":"blog/tags.html"},{"revision":"41ae3f909b7c019918c3adc59ada1fd2","url":"blog/tags/ai.html"},{"revision":"5972da196271152b9b15a3d05b850a38","url":"blog/tags/chat-gpt.html"},{"revision":"da69e63a93d8cb640adf4e55e33cc66e","url":"chatgpt.html"},{"revision":"12eb8c3b09035a50f79a554848f93526","url":"chatgpt/build.html"},{"revision":"4563602546813def4b07314a90dbd333","url":"chatgpt/config.html"},{"revision":"d9586a52ac1b7a85621e2da934864afd","url":"chatgpt/faq.html"},{"revision":"d591f5b88f4aefc31d4db2d2c7b0cace","url":"chatgpt/install.html"},{"revision":"7a9151c16a753eb31cc2834db92f661c","url":"chatgpt/menu.html"},{"revision":"74938ecc4c003f8d040d1f51a6917cf6","url":"chatgpt/prompts.html"},{"revision":"6423919ff32750c9a65acd58cc81b590","url":"contributors.html"},{"revision":"5c91c52aaa5e49dc649432e9863f148e","url":"index.html"},{"revision":"cb0d3136edb7c541e1960bad721a96ef","url":"meta/manifest.json"},{"revision":"6e372683e734a91fe3922c7751fdd975","url":"sponsors.html"},{"revision":"dc91a0f75684e6f3d87c7b9dddad1900","url":"assets/images/auto-update-b0b8bc6e9cc2badd3c04bd8caae2810d.png"},{"revision":"6f9b58d21f8c415fef8e744f9db14b20","url":"assets/images/chatgpt-559ccfd39eb02e4dbacba06536769fc1.png"},{"revision":"08ebb3eb830ed708a270f27371e16f3e","url":"assets/images/chatgpt-cmd-1edd8f444963f441c2616fa637dcd286.png"},{"revision":"d2949bb572a68ea484c18dedfb186d68","url":"assets/images/chatgpt-control-center-general-38b8336c0b25344a594d0af8f7a8f56b.png"},{"revision":"610b7eac8ed47a9059f6cd4e5f880f4a","url":"assets/images/chatgpt-dalle2-tray-65d228e150db6825be747afb1c69c240.png"},{"revision":"f3bed288e48c95b6c8e2ee69cc285ca2","url":"assets/images/chatgpt-export-ec40b227a8be112e5350268a32d75d1e.png"},{"revision":"d40bb2350b5c69fb9cc9b2ad1811c386","url":"assets/images/chatgpt-popup-search-bc2110b54c3dca332e256b9e73eed7cb.png"},{"revision":"37670c62c7f86400cd1797090a5ac7e7","url":"assets/images/chatgpt-sync-prompts-fd84e3db17a712c8c2334af11f467947.png"},{"revision":"932d605a3d353016d2a1e355daef9ca8","url":"assets/images/install-84d0d95961746de922f7ecd4a7e98c13.png"},{"revision":"6f9b58d21f8c415fef8e744f9db14b20","url":"img/chatgpt.png"},{"revision":"f8b181084ffbb0d00cefcd88858e627c","url":"img/logo.png"},{"revision":"316f341a12f73768302c96a5014c347b","url":"meta/144x144.png"},{"revision":"23b74daa9779703c9f89ed4855a2f071","url":"meta/16x16.png"},{"revision":"c76e856bf658d9ae6dbe3cad152bf0ed","url":"meta/32x32.png"},{"revision":"bffcbc9531aa3f86fda2f65094caed41","url":"meta/512x512.png"},{"revision":"3c708524254f12c044754bcf18515f19","url":"meta/96x96.png"},{"revision":"f8b181084ffbb0d00cefcd88858e627c","url":"meta/lencx.png"}],s=new m({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();