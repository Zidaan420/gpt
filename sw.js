(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.3"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.3"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.3"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.3"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);const o="__WB_REVISION__";function h(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set(o,s),{cacheKey:n.href,url:i.href}}class l{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class u{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let f;async function d(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===f){const e=new Response("");if("body"in e)try{new Response(e.body),f=!0}catch(e){f=!1}f=!1}return f}()?n.body:await n.blob();return new Response(c,r)}function p(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class g{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const y=new Set;s(873);function w(e){return"string"==typeof e?new Request(e):e}class _{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new g,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=w(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=w(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=w(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=p(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===p(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of y)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=w(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class v{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new _(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}class m extends v{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(m.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||t:void 0})),t&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==m.copyRedirectedCacheableResponsesPlugin&&(a===m.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(m.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}m.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},m.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await d(e):e};class R{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new m({cacheName:i(e),plugins:[...t,new u({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=h(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new l;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"ed99e6a8969c9a7388cd57e081a36d72","url":"404.html"},{"revision":"2a51e05681eb67062ddf22d420a36f9f","url":"assets/css/styles.b8e0eeae.css"},{"revision":"82ea1c128001f77dddc2ca33a82097d8","url":"assets/js/01a85c17.c7d6bd3b.js"},{"revision":"1a88ba5f82d49d26e5f681e997d976a3","url":"assets/js/131.ffbcb5aa.js"},{"revision":"7a7d57d901938788641c4a52adf72c40","url":"assets/js/14eb3368.1e9b6379.js"},{"revision":"41e759db3818a763e9695b90a518c571","url":"assets/js/17896441.ecd788e4.js"},{"revision":"55f7f49419e73f3443950b601ad45a80","url":"assets/js/1be78505.43fb97ab.js"},{"revision":"53dbdf49b3cc55f6a9b11fc1a005f935","url":"assets/js/1df93b7f.87a6d86b.js"},{"revision":"a9cd331f6ebd65b0e22a1461a3f19fed","url":"assets/js/1f391b9e.c46b5dc4.js"},{"revision":"0e22f7aeb4c8382c9ce314d62889cc7d","url":"assets/js/529.871d7fe7.js"},{"revision":"bcdc59e5779349aedeae551f2b0a5458","url":"assets/js/5ed6d960.1e3b2356.js"},{"revision":"d32f4cd1ae4201ff501b81fc13f4a437","url":"assets/js/6875c492.b73b49ad.js"},{"revision":"0326e1e6e8045b5ec2552b87e3916411","url":"assets/js/6ecc6e3c.af6af4fe.js"},{"revision":"47d3dd020b05f3d12848f5928dd0ee26","url":"assets/js/736.69668fa0.js"},{"revision":"c026fd97bec6f081fac65ff0501fd136","url":"assets/js/740.ceebc7ad.js"},{"revision":"00766ffd472031e7bfcbb93688945f1f","url":"assets/js/773.9977a686.js"},{"revision":"199e163c7d6fd8acc5bb55fdb615e37f","url":"assets/js/7f88e779.73b8d7f2.js"},{"revision":"9400f9acfffbdf80df3dc6410edaf2a6","url":"assets/js/814f3328.b95fa2f2.js"},{"revision":"c08e9bfea3965fb7af23d87602531728","url":"assets/js/849.1eba549d.js"},{"revision":"49d0fdb9f0b60f2b316ea41813ac4bc9","url":"assets/js/935f2afb.7840ba8c.js"},{"revision":"49739d204ad968496c4739b584c8435b","url":"assets/js/95d26c0e.6b1585e7.js"},{"revision":"2f25d253deea99b26f1bc5414291b4d4","url":"assets/js/99f59e63.989c9b07.js"},{"revision":"f1636b1ba4d872ffacd997a6deb05822","url":"assets/js/9e4087bc.19921ecc.js"},{"revision":"4850a561e163883c356496c6fb7cda5e","url":"assets/js/a0b0e983.c5d849c6.js"},{"revision":"8ecbbde3b3d0870eb191ec84abf4bc2b","url":"assets/js/a6aa9e1f.cf4c3ffa.js"},{"revision":"ae0e9784e41c9d6c1d8e93a7735cbe73","url":"assets/js/a7023ddc.47efbcac.js"},{"revision":"98f740cd7de8be01a6a9be1bf9487b39","url":"assets/js/b2b675dd.339c0317.js"},{"revision":"d39b7ee3b6c7ee5931b7329ed240c76b","url":"assets/js/b2f554cd.c312bb11.js"},{"revision":"61db4ff90b3843f083a3f44598ab4669","url":"assets/js/b6b31a06.3233bc10.js"},{"revision":"c6d3d773f8007e1fde94d4f128fafb3e","url":"assets/js/ccc49370.d835c179.js"},{"revision":"978d16a5b23ae597b4cd23ffc144566b","url":"assets/js/ceeecb8f.d8846153.js"},{"revision":"cda2f596c20516c754466f3f0e0441c6","url":"assets/js/d160d429.cc879f01.js"},{"revision":"5fd13433b4035b98e981854698a27e94","url":"assets/js/d2b3eb8d.725347d8.js"},{"revision":"1df180f393db281724154c61b6e9b4cf","url":"assets/js/df9987ad.6669d1c6.js"},{"revision":"d64270e4cf6263d21e8077c1443dadaf","url":"assets/js/e4e1e4d1.8056cfd2.js"},{"revision":"b0c0d73457165ad53357235b81b13eb8","url":"assets/js/e9ab7ea2.ce98d2eb.js"},{"revision":"5e694fd02557897fb83a673190737921","url":"assets/js/main.73332186.js"},{"revision":"eef1a20a75f45c133de08e6be4abd675","url":"assets/js/runtime~main.c6e38269.js"},{"revision":"a78fe1c9cc3f474adcf1419ca5d9598a","url":"blog.html"},{"revision":"c40cf7d3777a453dc76ac5b022f6801e","url":"blog/archive.html"},{"revision":"2aeefcedac1e3040d0f1435995307132","url":"blog/hello-chatgpt.html"},{"revision":"3327bb15239fe9d42a96d58e1f60adfe","url":"blog/tags.html"},{"revision":"b33d6d8e0d88a4a52175387bcecea1c2","url":"blog/tags/chatgpt.html"},{"revision":"654fcd55b186befd7382f3a600333995","url":"chatgpt.html"},{"revision":"28493e74a5ebeba8605482814d55d037","url":"chatgpt/config.html"},{"revision":"eb2ce2f7901837e0cba9696343a7c0bb","url":"chatgpt/install.html"},{"revision":"018770abdaa8a95ba6df05eb2c194879","url":"chatgpt/menu.html"},{"revision":"ca7b39176664a4fbfda443a205908bd8","url":"chatgpt/tray.html"},{"revision":"a3f7d10aa1547400259752f95503e2d8","url":"contributors.html"},{"revision":"180ec4a6f7498df46dc3af5a68fbc122","url":"index.html"},{"revision":"cb0d3136edb7c541e1960bad721a96ef","url":"meta/manifest.json"},{"revision":"6f9b58d21f8c415fef8e744f9db14b20","url":"assets/images/chatgpt-559ccfd39eb02e4dbacba06536769fc1.png"},{"revision":"6f9b58d21f8c415fef8e744f9db14b20","url":"img/chatgpt.png"},{"revision":"f8b181084ffbb0d00cefcd88858e627c","url":"img/logo.png"},{"revision":"316f341a12f73768302c96a5014c347b","url":"meta/144x144.png"},{"revision":"23b74daa9779703c9f89ed4855a2f071","url":"meta/16x16.png"},{"revision":"c76e856bf658d9ae6dbe3cad152bf0ed","url":"meta/32x32.png"},{"revision":"bffcbc9531aa3f86fda2f65094caed41","url":"meta/512x512.png"},{"revision":"3c708524254f12c044754bcf18515f19","url":"meta/96x96.png"},{"revision":"f8b181084ffbb0d00cefcd88858e627c","url":"meta/lencx.png"}],s=new R({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();